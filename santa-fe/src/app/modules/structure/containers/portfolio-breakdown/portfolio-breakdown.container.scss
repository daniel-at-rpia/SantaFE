@import "global.scss";
@import "modules/structure/structure.scss";

$portfolioBreakdown_borderWidth: $typical_border_width*2; // can't use rem because fractions of a pixel doesn't look well here
$portfolioBreakdown_rating_width: 12rem;
$portfolioBreakdown_rating_thickness: 1.75rem;
$portfolioBreakdown_categoryList_cell_width: 3.5rem;
$portfolioBreakdown_rating_height: 1rem;

.sat-portfolioBreakdown {
  $blockName: &;
  @include mix_fixed_div(relative, $z_index_base_item);
  @include mix_border_generator($portfolioBreakdown_borderWidth);
  @include mix_border_radius(10px);
  // display: flex;
  display: none;
  flex-direction: column;
  width: $portfolioBreakdownWidth;
  background-color: $color_gray_2;
  margin-top: $portfolioBreakdown_rating_thickness/2;
  padding: $spacing_small;
  &__title {
    @include mix_fixed_div(absolute, $z_index_base_item_solid);
    display: flex;
    align-items: flex-start;
    &-definition {
      @include mix_border_radius(10px);
      display: flex;
      justify-content: center;
      align-items: center;
      background-color: $color_gray_3;
      width: 3rem;
      height: 3rem;
      margin-right: $spacing_medium;
    }
    &-text {
      color: $font_color_trivial;
      font-size: $font_size_large;
    }
  }
  &__rating {
    @include mix_fixed_div(absolute, $z_index_hovering_item);
    @include mix_border_generator($portfolioBreakdown_borderWidth, $color_active);
    @include mix_border_radius(5px);
    display: flex;
    justify-content: center;
    align-items: center;
    top: -$portfolioBreakdown_rating_thickness/2;
    left: 50%;
    transform: translateX(-50%);
    width: $portfolioBreakdown_rating_width;
    height: $portfolioBreakdown_rating_thickness;
    overflow: hidden;
    background-color: $color_white;
    visibility: hidden;
    &-fill {
      @include mix_fixed_div(absolute, $z_index_base_item_solid);
      @include mix_border_radius(3px, 'left');
      height: 100%;
      background-color: $color_red_5;
      left: 0;
    }
    &-hoverText {
      @include mix_fixed_div(absolute, $z_index_hovering_item);
      color: $font_color_minor;
      font-size: $font_size_normal;
    }
  }
  &__index {
    @include mix_fixed_div(absolute, $z_index_base_item);
    @include mix_calculate(bottom, 100%, $portfolioBreakdown_rating_thickness + $spacing_x_small, '-');
    display: flex;
    justify-content: flex-end;
    align-items: center;
    width: 6rem;
    height: 2rem;
    right: $spacing_small;
    &-text {
      @include mix_text_overflow_multi_line(2);
      text-align: right;
      color: $font_color_minor;
      line-height: $line_height_minimum;
    }
  }
  &__categoryHeader {
    display: flex;
    justify-content: flex-end;
    margin: $portfolioBreakdown_rating_thickness 0 $portfolioBreakdown_rating_thickness/2;
    &-cell {
      @include mix_fixed_div(relative, $z_index_base_item);
      display: flex;
      justify-content: center;
      align-items: center;
      width: $portfolioBreakdown_categoryList_cell_width;
      &-icon {
        color: $font_color_minor;
        font-size: $font_size_large;
      }
      &-tooltip {
        @include mix_fixed_div(absolute, $z_index_hovering_item);
        @include mix_border_radius(3px);
        display: none;
        bottom: 100%;
        color: $font_color_inverse;
        line-height: $line_height_small;
        width: 4.25rem;
        background-color: $color_active;
        text-align: center;
        // &--index {
          // width: 8rem;
          // right: 0;
        // }
      }
      &:hover>&-tooltip {
        display: block;
      }
    }
  }
  &__categoryContent {
    flex: 0 0 auto;
    display: flex;
    flex-direction: column;
    margin-bottom: $spacing_small; // this is to accomodate the ctas so the buttons don't block the content
    &-list {
      display: flex;
      flex-direction: column;
      &-item {
        display: flex;
        align-items: center;
        &>portfolio-breakdown-row {
          display: flex;
          flex: 1 1 auto;
        }
      }
    }
  }
  &__ctas {
    @include mix_fixed_div(absolute, $z_index_hovering_item_lift);
    display: flex;
    justify-content: center;
    left: 0;
    bottom: 0 - $iconButton_size_regular/2;
    width: 100%;
    &-editBtn {
      display: none;
      margin: 0 $spacing_medium;
    }
    &-allSubLevelsBtn {
      display: none;
      margin: 0 $spacing_medium;
    }
  }
  &--goodRating {
    #{$blockName} {
      &__rating {
        background-color: $color_active;
        &-fill {
          background-color: $color_green_5;
        }
      }
    }
  }
  &--averageRating {
    #{$blockName} {
      &__rating {
        background-color: $color_active;
        &-fill {
          background-color: $color_orange_5;
        }
      }
    }
  }
  &--badRating {
    #{$blockName} {
      &__rating {
        background-color: $color_active;
        &-fill {
          background-color: $color_red_5;
        }
      }
    }
  }
  &--ratingAvailableState {
    #{$blockName} {
      &__rating {
        visibility: visible;
        &-hoverText {
          color: $font_color_inverse;
        }
      }
    }
  }
  &--editableState {
    #{$blockName} {
      &__ctas {
        &-editBtn {
          display: flex;
        }
      }
    }
  }
  &--overrideVariant {
    display: flex;
    border-color: $color_active;
    background-color: $color_white;
    #{$blockName} {
      &__title {
        &-definition {
          background-color: $color_active;
          padding-bottom: $spacing_minimum; // for some weird reason the icon was not centered perfectly
        }
        &-text {
          color: $font_color_major;
        }
      }
    }
  }
  &--isBICs {
    #{$blockName} {
      &__ctas {
        &-allSubLevelsBtn {
          display: flex;
        }
      }
    }
  }
  &--displayAllTargetState {
    #{$blockName} {
      &__ctas {
        &-allSubLevelsBtn {
          @include material('none');
          background-color: $color_active;
          &>i, &>span {
            color: $font_color_inverse;
          }
        }
      }
    }
  }
  &--previewVariant {
    display: flex;
    flex: 1 1 auto;
    width: auto;
  }
  &--stencilState {
    display: flex;
    #{$blockName} {
      &__rating {
        background-color: $color_white;
        &-fill {
          background-color: $color_stencil;
        }
        &-hoverText {
          @include mix_stencil_animation;
          background-color: $color_stencil;
          color: $color_stencil;
        }
      }
      &__index {
        &-text {
          @include mix_stencil_animation;
          background-color: $color_stencil;
          color: $color_stencil;
        }
      }
    }
  }
}