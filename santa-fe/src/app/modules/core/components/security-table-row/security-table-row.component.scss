@import "global.scss";


$securityTableRow_expandCanvas_height: 40rem + $spacing_medium * 2;
.sat-securityTableRow {
  $securityTableRowBlockName: &;
  @include mix_fixed_div(relative, $z_index_standard_base_item_solid);
  direction: ltr;
  display: flex;
  flex-direction: column;
  background-color: $color_gray_2;
  &__tableCanvas {
    @include mix_alive('material');
    display: flex;
  }
  &__expandCanvas {
    display: flex;
    flex-direction: column;
    max-height: 0;
    overflow: hidden;
    &-content {
      @include mix_alive('custom', transform $animation_duration_light);
      flex: 1 1 auto;
      display: flex;
      flex-direction: column;
      transform: translate(0, -100%);
      background-color: $color_active;
      overflow: hidden;
      &-spacing {
        @include mix_border_generator($typical_border_width 0 0 0, $color_white);
        height: $spacing_small;
        margin: $spacing_small $spacing_large 0 $spacing_large;
      }
      &-label {
        display: flex;
        padding-left: $SecurityQuote_time_width + $spacing_x_small;
        padding-right: $SecurityQuote_ctas_width + $spacing_small + $scroll_bar_width + $spacing_x_small;
        margin-bottom: $spacing_x_small;
      }
      &-messageList {
        @include mix_enable_scrollbar('vertical');
        display: flex;
        flex-direction: column;
        margin-right: $spacing_small;
      }
      &-collapseBtn {
        @include mix_border_radius(50%);
        align-self: center;
        margin: $spacing_medium;
        background-color: $color_kill;
        color: $font_color_inverse;
      }
    }
  }
  &:hover {
    @include mix_fixed_div(relative, $z_index_standard_base_item_lift);
    #{$securityTableRowBlockName} {
      &__tableCanvas {
        @include material();
        background-color: $color_white;
      }
    }
  }
  &--evenState {
    background-color: $color_blue_gray_1;
    color: $color_blue_gray_8;
  }
  &--expandedState {
    #{$securityTableRowBlockName} {
      &__tableCanvas {
        background-color: $color_active;
        .sat-securityTableCell {
          &__metric {
            &-text {
              color: $font_color_inverse;
            }
          }
        }
      }
      &__expandCanvas {
        max-height: $securityTableRow_expandCanvas_height;
        &-content {
          transform: translate(0, 0);
        }
      }
    }
  }
  &--expandedState:hover {
    #{$securityTableRowBlockName} {
      &__tableCanvas {
        background-color: $color_active;
        @include material('none');
      }
    }
  }
}

.sat-securityTableRowExpandViewLabel {
  $securityTableRowExpandViewLabelBlockName: &;
  flex: 1 1 5%;
  display: flex;
  justify-content: center;
  margin-left: $SecurityQuote_spacing_height;
  margin-right: $SecurityQuote_spacing_height + $typical_border_width;
  &__content {
    display: flex;
    justify-content: center;
    align-items: center;
    &-cta {
      padding: $spacing_x_small;
      &-icon {
        margin-top: $spacing_xx_small;
        display: none;
      }
      &-text {
        font-size: $font_size_small;
      }
      &--sortActive {
        @include material('none');
        background-color: $color_sort;
        color: $font_color_inverse;
      }
      &--sortActive &-icon {
        display: inline-block;
      }
    }
    &-text {
      display: none;
      color: $font_color_inverse;
      font-size: $font_size_small;
    }
    &:first-of-type {
      margin-right: $spacing_x_small;
    }
    &:nth-of-type(2) {
      margin-left: $spacing_x_small;
    }
  }
  &--doubleWidth {
    flex: 1 1 10%;
  }
  &--tripleWidth {
    flex: 1 1 15%;
  }
  &--textOnly {
    #{$securityTableRowExpandViewLabelBlockName} {
      &__content {
        &-cta {
          display: none;
        }
        &-text {
          display: inline-block;
        }
      }
    }
  }
  &--first {
    margin-left: 0;
  }
  &--last {
    margin-right: 0;
  }
}

.sat-securityTableCell {
  $securityTableCellBlockName: &;
  display: flex;
  justify-content: center;
  align-items: center;
  width: $securityTable_cell_width;
  padding: $spacing_x_small 0;
  min-height: 3.125rem; // so when QuantComparer is rendered the dimension doesn't change
  &__metric {
    flex: 1 1 auto;
    display: flex;
    justify-content: center;
    align-items: center;
    &-text {
      text-align: center;
      padding: 0 $spacing_small;
      user-select: none;
    }
  }
  &__quant {
    flex: 1 1 auto;
    display: none;
    quant-comparer {
      flex: 1 1 auto;
    }
  }
  &--securityCardVariant {
    width: $securityTable_cell_width_primary;
  }
  &--quantVariant {
    width: $securityTable_cell_width_quant;
    #{$securityTableCellBlockName} {
      &__metric {
        display: none;
      }
      &__quant {
        display: flex;
      }
    }
  }
  &--stencilState {
    #{$securityTableCellBlockName} {
      &__metric-text {
        @include mix_stencil_animation;
      }
    }
  }
}